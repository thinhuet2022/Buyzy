#server.port=8080
#spring.application.name=api-gateway
#jwt.secret=JxADc+fxold2eO2L9uEUQk2Onjt4xGO6kIZMF+320A4=
#
#spring.devtools.remote.secret=mysecret
#spring.devtools.restart.enabled=true
#spring.devtools.livereload.enabled=true
#
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOrigins=http://localhost:5173
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowCredentials=true
#
## USER SERVICE
#spring.cloud.gateway.routes[0].id=user-service
#spring.cloud.gateway.routes[0].uri=http://localhost:8081
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/auth/**
#
#
#spring.cloud.gateway.routes[1].id=user-controller
#spring.cloud.gateway.routes[1].uri=http://localhost:8081
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/users/**
#spring.cloud.gateway.routes[1].filters[0]=AuthenticationFilter
#
## PRODUCT SERVICE
#spring.cloud.gateway.routes[2].id=product-service
#spring.cloud.gateway.routes[2].uri=http://localhost:8082
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/products/**
#spring.cloud.gateway.routes[2].filters[0]=AuthenticationFilter
## ORDER SERVICE
#spring.cloud.gateway.routes[3].id=order-service
#spring.cloud.gateway.routes[3].uri=http://localhost:8083
#spring.cloud.gateway.routes[3].predicates[0]=Path=/api/v1/orders/**
#spring.cloud.gateway.routes[3].filters[0]=AuthenticationFilter


server.port=${PORT}
spring.application.name=api-gateway
jwt.secret=JxADc+fxold2eO2L9uEUQk2Onjt4xGO6kIZMF+320A4=

spring.devtools.remote.secret=mysecret
# http://${FRONT_END_HOST}:${FRONT_END_PORT}
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOrigins=http://localhost:3000,http://frontend:3000, http://localhost:5173
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowCredentials=true

# USER SERVICE
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=http://${USER_SERVICE_HOST}:${USER_SERVICE_PORT}
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/auth/**


spring.cloud.gateway.routes[1].id=user-controller
spring.cloud.gateway.routes[1].uri=http://${USER_SERVICE_HOST}:${USER_SERVICE_PORT}
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/users/**
spring.cloud.gateway.routes[1].filters[0]=AuthenticationFilter

# PRODUCT SERVICE
spring.cloud.gateway.routes[2].id=product-service
spring.cloud.gateway.routes[2].uri=http://${PRODUCT_SERVICE_HOST}:${PRODUCT_SERVICE_PORT}
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/products/**
spring.cloud.gateway.routes[2].filters[0]=AuthenticationFilter

spring.cloud.gateway.routes[4].id=product-service
spring.cloud.gateway.routes[4].uri=http://${PRODUCT_SERVICE_HOST}:${PRODUCT_SERVICE_PORT}
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/v1/categories/**
spring.cloud.gateway.routes[4].filters[0]=AuthenticationFilter

spring.cloud.gateway.routes[5].id=product-service
spring.cloud.gateway.routes[5].uri=http://${PRODUCT_SERVICE_HOST}:${PRODUCT_SERVICE_PORT}
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/v1/cart/**
spring.cloud.gateway.routes[5].filters[0]=AuthenticationFilter
# ORDER SERVICE
spring.cloud.gateway.routes[3].id=order-service
spring.cloud.gateway.routes[3].uri=http://${ORDER_SERVICE_HOST}:${ORDER_SERVICE_PORT}
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/v1/orders/**
spring.cloud.gateway.routes[3].filters[0]=AuthenticationFilter

spring.cloud.gateway.routes[6].id=order-service
spring.cloud.gateway.routes[6].uri=http://${ORDER_SERVICE_HOST}:${ORDER_SERVICE_PORT}
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/v1/payment/**
spring.cloud.gateway.routes[6].filters[0]=AuthenticationFilter

logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty=DEBUG
